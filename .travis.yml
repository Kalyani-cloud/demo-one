sudo: required
language: java
os: linux
dist: trusty
jdk:
  - openjdk8
cache:
  directories:
  - .autoconf
  - $HOME/.m2
services:
  - docker
before_script:
  - sudo apt-get install docker
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install
  - aws --version
  - export PATH=$PATH:/$HOME/.local/bin
  - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mkdir -p $HOME/bin
  - cp ./kubectl $HOME/bin/kubectl
  - export PATH=$PATH:$HOME/bin
  - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
  - kubectl version --short --client
  - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator
  - chmod +x ./aws-iam-authenticator
  - mkdir -p $HOME/bin
  - cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator
  - export PATH=$PATH:$HOME/bin
  - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
  - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator
  - chmod +x ./aws-iam-authenticator
  - mkdir -p $HOME/bin
  - cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator
  - export PATH=$PATH:$HOME/bin
  - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
  - export KUBECONFIG=$HOME/.kube/kubeconfig
  - aws eks --region us-east-1 update-kubeconfig --name eks-test-cluster
  - kubectl get nodes
script:
  - mvn clean install
  - docker build -t test .
  - docker build -t devops-repo .
after_success:
  - docker images
  - docker run -it devops-repo:latest
  - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
  - docker tag test $DOCKER_USER/test-repo:$TRAVIS_BUILD_NUMBER
  - docker push $DOCKER_USER/test-repo:$TRAVIS_BUILD_NUMBER
  - docker tag test $DOCKER_USER/test-repo:latest
  - docker push $DOCKER_USER/test-repo:latest
# - ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_PASSWORD
#  - ./jfrog rt u "/home/travis/.m2/repository/com/coveros/demo/helloworld/1.1/helloworld-1.1.jar" test-local --build-name=hello --build-number=$TRAVIS_BUILD_NUMBER --flat=false
#  - ./jfrog rt bce hello $TRAVIS_BUILD_NUMBER
#  - ./jfrog rt bp hello $TRAVIS_BUILD_NUMBER
#  - eval $(aws ecr get-login --region ca-central-1 --no-include-email)
#  - docker tag $REPO:$TRAVIS_BUILD_NUMBER $AWS_ACCOUNT_NUMBER.dkr.ecr.ca-central-1.amazonaws.com/$REPO:$TRAVIS_BUILD_NUMBER
#  - docker tag $REPO:latest $AWS_ACCOUNT_NUMBER.dkr.ecr.ca-central-1.amazonaws.com/$REPO:latest
#  - docker push $AWS_ACCOUNT_NUMBER.dkr.ecr.ca-central-1.amazonaws.com/$REPO:latest
